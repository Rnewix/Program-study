

Automatizacion de Test

-------------------------------------
Instalacion
-------------------------------------

Requerimientos a instalar:

    Requerido
    ------------------
        1.- Selenium
        2.- Driver de tu navegador.   (Descargar driver para sitios web de Selenium)
  
    Opcionales
    -----------------
        3.- PyUnit Report             (Escribira reporte de lo realizado por selenium en PDF)
  

1-   Venv
2-   pip install selenium
2.5- pip install webdriver-manager
3-   pip install pyunitreport       (opcional)



driver => Objeto que realizara todas las acciones en el browser. 

--------------------------------------
Script Basico de test en OOP
--------------------------------------

    # Importaciones 
    ### Librerias que gustes usar ##############
    import unittest                                                      
    from pyunitreport import HTMLTestRunner                              
    
    ### Driver #################################
    from selenium import webdriver                                          <---- Importar driver especifico para web en donde se realizara test 
    from selenium.webdriver.chrome.service import Service as ChromeService            <-- (Este para Chrome)
    from webdriver_manager.chrome import ChromeDriverManager


    class MyTestName(unittest.TestCase):                                    <---- Crear clase para un Test case

        @classmethod                                                            <---- Decorador (multiples test - una sola pagina)
        def setUpClass(cls):                                                    <---- Inicializa Test (Test Feacture)
            cls.driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))    <---Instala Driver de Browser. Asigna Driver a variable driver. 


        def test_visit_wikipedia(self):                                     <----Pruebas Unitarias a realizar (inician siempre con test_ (buena practica))
            self.driver.get('https://www.wikipedia.org')                              <--Abrir Webpage


        @classmethod                                                            <---- Decorador (multiples test - una sola pagina)
        def tearDownClass(cls):                                                 <---- Instrucciones para finalizacion de la prueba (Test Feacture)
            cls.driver.quit()                                                         <--cierra Webpage


        if __name__ == "__main__":                                          <---- Name de la clase (iniciar codigo desde consola)
            unittest.main(                                                
                verbosity = 2,                                            
                testRunner = HTMLTestRunner(                                    <---- Llamar a TestRuner para generar reporte de prueba
                   output = 'reportes',                                               <-- Carpeta del reporte
                   report_name = 'hello-world-report')                                <-- Nombre del reporte
                   )
                   


-------------------------------------------------------------
Drivers: https://github.com/SergeyPirogov/webdriver_manager
-------------------------------------------------------------
    Edge
        from selenium import webdriver
        from selenium.webdriver.edge.service import Service as EdgeService
        from webdriver_manager.microsoft import EdgeChromiumDriverManager

        cls.driver = webdriver.Edge(service=EdgeService(EdgeChromiumDriverManager().install()))
    
    Firefox
        from selenium import webdriver
        from selenium.webdriver.firefox.service import Service as FirefoxService
        from webdriver_manager.firefox import GeckoDriverManager

        cls.driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()))
        
        
--------------------------------------------------------------
Driver
--------------------------------------------------------------
driver.get()
Driver.quit()
